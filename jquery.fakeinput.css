@keyframes blink {
    50% {
        color: transparent;
    }
}

.fab-fakeinput {
    position: relative !important; /* so we can position the text node inside */
    overflow: hidden !important;
    /* Input elements are "replaced elements", as such they are neither inline nor inline-block nor block
       but they behave like inline-block elements. Chrome reports conveniently the element as being inline-block
       when both displayed in dev tools or retrieved from getComputedStyle().
       Oddly, Firefox shows "inline" in its inspector but returns "block" from getComputedStyle().
       Because of this, we have to force the display to inline-block explicitly */
    display: inline-block !important;

    /* As we set its position to relative, the "inherited" top & left that normally would not
       apply on a static real input can take effect here, so we need to cancel it.*/
    top: 0 !important;
    left: 0 !important;

    /* by default, white-space is "normal" meaning whitespaces are collapsed. We want to preserve them. */
    white-space: pre !important;
    cursor: text !important;
}

.fab-fakeinput-textnode {
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;
    margin: 0;
    padding: 0;
    border-width: 0;
}

.fab-fakeinput-caret {
    position: relative;
    animation: 1s blink infinite steps(1);
}